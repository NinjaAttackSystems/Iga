using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GbrToGcode.Services
{
    public class Position
    {
        public float X { get; set; }
        public float Y { get; set; }

    }

    public class GCodeService
    {
        public string ExportGcode(IList<Position> edgePairs, IList<Position> padPairs, string filename, bool makeDryRun, float offsetX, float offsetY, float offsetZ)
        {

            // Some printing settings:
            const int alignmentSpeed = 500; //The printer speed for alignment tasks
            const int movementSpeed = 5000; //The printer speed for extruding tasks
            const double offsetZTravel = 3.0; //Offset of the needle for traveling: how much the needle will lift from the bed to move

            //
            // # Variables to calculate the current job percentage:
            var totalPoints = padPairs.Count();
            var currentPoint = 0;

            var datetimeNow = DateTime.Now;
            
            var gCodeFile = new StringBuilder(); ;

            gCodeFile.AppendLine("; Generated by gerber2gcode on " + datetimeNow.ToString("%Y-%m-%d %H:%M"));
            gCodeFile.AppendLine("; Created by: vascojdb@gmail.com, magdalena.wiktoria.szczypka@gmail.com");
            gCodeFile.AppendLine("; https://github.com/vascojdb, https://github.com/magdalenaws");
            gCodeFile.AppendLine("");
            gCodeFile.AppendLine("; BEGIN OF PRE-PREPARATIONS SECTION");
            gCodeFile.AppendLine("M107 ; fan off");
            gCodeFile.AppendLine("M117 Preparing ; display message");
            gCodeFile.AppendLine("G90 ; absolute positioning");
            gCodeFile.AppendLine("G21 ; set units to millimetres");
            gCodeFile.AppendLine("G28 ; auto home");
            gCodeFile.AppendLine($"G1 Z10 F{movementSpeed}; lift nozzle");
            gCodeFile.AppendLine("G1 F{movement_speed} ; set movement speed");
            gCodeFile.AppendLine("; END OF PRE-PREPARATIONS SECTION");

            if (offsetX != 0 || offsetX != 0 || offsetY != 0)
            {
                gCodeFile.AppendLine("");
                gCodeFile.AppendLine("; BEGIN OF ALIGNMENT SECTION");
                gCodeFile.AppendLine("M117 Aligning ; display message");
                foreach (var pair in edgePairs)
                {
                    var pos_x = pair.X + offsetX;
                    var pos_y = pair.Y + offsetY;
                    gCodeFile.AppendLine($"G1 X{Math.Round(pos_x)} Y{Math.Round(pos_y)} F{alignmentSpeed}");
                    gCodeFile.AppendLine($"G1 Z {Math.Round(offsetZ)} F{alignmentSpeed}");
                    gCodeFile.AppendLine("M0 Click to move to next point...");
                    gCodeFile.AppendLine($"G1 Z{offsetZTravel} F{alignmentSpeed}");
                }

                gCodeFile.AppendLine("; END OF ALIGNMENT SECTION");
            }

            gCodeFile.AppendLine("");
            gCodeFile.AppendLine("; BEGIN OF PASTE EXTRUDING SECTION");
            gCodeFile.AppendLine("M75 ; start print job timer");
            gCodeFile.AppendLine("M73 P0 ; set print progress percentage");
            gCodeFile.AppendLine("M117 Applying solder paste ; display message");


            foreach (var pair in padPairs)
            {
                var pos_x = pair.X + offsetX;
                var pos_y = pair.Y + offsetY;

                gCodeFile.AppendLine($"G1 X{pos_x} Y{pos_y}");

                gCodeFile.AppendLine($"G1 Z{Math.Round(offsetZ)} F{movementSpeed}");
                if (!makeDryRun)
                {
                    // # TODO: Add gcode to extrude solder paste
                    gCodeFile.AppendLine("; TODO");
                }

                gCodeFile.AppendLine($"G1 Z{Math.Round(offsetZTravel)} F{movementSpeed}");

                // # Calculate percentage of job already done:
                currentPoint += 1;
                double current_percentage = (100 * currentPoint) / totalPoints;
                gCodeFile.AppendLine($"M73 P {Math.Round(current_percentage)}");
            }

            gCodeFile.AppendLine("M73 P100 ; set print progress percentage");
            gCodeFile.AppendLine("M77 ; stop print job timer");
            gCodeFile.AppendLine("; END OF PASTE EXTRUDING SECTION");

            gCodeFile.AppendLine("");
            gCodeFile.AppendLine("; BEGIN OF FINAL PREPARATIONS ");
            gCodeFile.AppendLine("G1 X0 F10000 ; move X to position 0");
            gCodeFile.AppendLine("G1 Y150 F10000 ; move bed to the front");
            gCodeFile.AppendLine("M84 ; turn steppers off");
            gCodeFile.AppendLine("M117 Finished ; display message");
            gCodeFile.AppendLine("M300 S900 P1000; Play beep");
            gCodeFile.AppendLine("; END OF FINAL PREPARATIONS ");

            gCodeFile.AppendLine("");
            gCodeFile.AppendLine("; END OF FILE ");
            
            return gCodeFile.ToString();
        }
    }
}
